[gd_scene load_steps=6 format=3 uid="uid://betedhxnvyt5x"]

[ext_resource type="Texture2D" uid="uid://t7jabisvcs45" path="res://Road.png" id="1_fbgwo"]
[ext_resource type="PackedScene" uid="uid://c00afej06a70s" path="res://Car.tscn" id="2_a4p8f"]
[ext_resource type="PackedScene" uid="uid://dwh2qbiumnkvh" path="res://boxtruck.tscn" id="2_ueg4e"]
[ext_resource type="PackedScene" uid="uid://c4b4y2tmes76n" path="res://sedan.tscn" id="3_6j3sk"]

[sub_resource type="GDScript" id="GDScript_151dw"]
resource_name = "Game"
script/source = "extends Node2D

@export var sedan : PackedScene
@export var boxTruck : PackedScene
@export var lanes : Array

var traffic
var speeds
var cars_on_track
var score
var game_over
@export var last_position = 350

@export var traffic_speed = 2
var timer
var seconds
var y = 50
var x = 48

var num = 1

func _ready():
	score = 0
	timer = 0
	
	traffic = [sedan,boxTruck]
	speeds = [2]

	cars_on_track = []
	
func spawn_car():
	var spawned = traffic.pick_random().instantiate()
	spawned.set_position(lanes.pick_random())
	add_child(spawned)
	cars_on_track.append(spawned)
	
func _process(delta):
	timer += 1
	seconds = timer/60
	if seconds == traffic_speed:
		spawn_car()
		timer = 0

	for i in cars_on_track:
		free_car(i)
		pass
	

	
	
func free_car(i):
	
	if i.position.y >= last_position:
		cars_on_track.remove_at(cars_on_track.find(i))
		i.queue_free()
		score += 1

	 # Replace with function body.
func game_over():
	print(\"Game Over : \" , score)

func _on_car_collided():
	 game_over()# Replace with function body.
	

"

[node name="Level" type="Node2D"]
script = SubResource("GDScript_151dw")
sedan = ExtResource("3_6j3sk")
boxTruck = ExtResource("2_ueg4e")
lanes = [Vector2(48, -50), Vector2(96, -50), Vector2(144, -50), Vector2(192, -50)]
last_position = null
traffic_speed = null

[node name="Road" type="Sprite2D" parent="."]
position = Vector2(120, 160)
texture = ExtResource("1_fbgwo")

[node name="Car" parent="." instance=ExtResource("2_a4p8f")]
position = Vector2(121, 274)
scale = Vector2(0.6, 0.6)

[connection signal="collided" from="Car" to="." method="_on_car_collided"]
